// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using homeBudget.Data;

namespace homeBudget.Migrations
{
    [DbContext(typeof(TransactionContext))]
    partial class TransactionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("homeBudget.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("homeBudget.Models.KeeWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("SubCategoryId");

                    b.Property<double>("XCoordinate");

                    b.Property<double>("YCoordinate");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("KeeWords");
                });

            modelBuilder.Entity("homeBudget.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("KeyWord");

                    b.Property<string>("SupPorject");

                    b.HasKey("Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("homeBudget.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("BankAccountId");

                    b.Property<DateTime>("DateTime");

                    b.Property<int?>("KeeWordId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("KeeWordId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("homeBudget.Models.TransactionsKeewords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("KeeWordId");

                    b.Property<int>("TransactionId");

                    b.HasKey("Id");

                    b.HasIndex("KeeWordId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionsKeewordses");
                });

            modelBuilder.Entity("homeBudget.Models.KeeWord", b =>
                {
                    b.HasOne("homeBudget.Models.SubCategory", "SubCategory")
                        .WithMany("KeeWord")
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("homeBudget.Models.Transaction", b =>
                {
                    b.HasOne("homeBudget.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("homeBudget.Models.KeeWord", "KeeWord")
                        .WithMany()
                        .HasForeignKey("KeeWordId");
                });

            modelBuilder.Entity("homeBudget.Models.TransactionsKeewords", b =>
                {
                    b.HasOne("homeBudget.Models.KeeWord", "KeeWord")
                        .WithMany("TransactionsKeewordses")
                        .HasForeignKey("KeeWordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("homeBudget.Models.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
